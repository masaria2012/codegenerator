package ${package_name};

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.test4j.module.database.dbop.SqlSet;
import org.test4j.module.spring.annotations.SpringBeanByType;
import org.test4j.module.database.annotations.Transactional;
import org.test4j.module.database.annotations.Transactional.TransactionMode;

#foreach ($import_tested_class in $import_tested_classes)
import $import_tested_class;
#end

${db_tx_manager_annotation}
public class ${class_name} extends TestBase {
    
    @SpringBeanByType
    private ${tested_class_name} ${tested_instance_field};
    
#foreach ($field in $field_list)
    $field 
#end

	@BeforeClass
	public void init() {
	    try {
		    db.useDB( "${db_prefix}" );
		    db.execute( new SqlSet() {
		        {
		            sql( "${insert_sql}" );
		        }
		    }).commit();
	    } catch( Exception e ) {
	        e.printStackTrace();
	    }
	}
	
	@AfterClass
	public void after() {
		db.useDB( "${db_prefix}" );
		db.execute( new SqlSet() {
			{
				sql( "${delete_sql}" );
			}
		}).commit();
	}	

$setup_list	

#foreach ($method in $test_methods)
$method
#end

}